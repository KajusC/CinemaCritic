@page "/Movies"
@inherits MoviesBase
@using CinemaCritic.Models.Dto
@using CinemaCritic.Web.Services
@using Microsoft.AspNetCore.Components.Authorization
@inject JwtAuthenticationService AuthenticationServiced

@if (Movies is null)
{
    if (!IsLoggedIn)
    {
        <h1>You are not authorized to view this page</h1>
    }
    else
    {
        <h1>Loading...</h1>
    }
}
else
{
    <div class="center">
        <SearchBox Items="@Movies" OnSearch="UpdateFilteredMovies"></SearchBox>
    </div>
    @code {
    List<MovieDto> filteredMovies = new();
    void UpdateFilteredMovies(string search)
    {
        if (string.IsNullOrEmpty(search))
        {
            filteredMovies = Movies.ToList();
        }
        else
        {
            filteredMovies = Movies.Where(m => m.Name.Contains(search, StringComparison.OrdinalIgnoreCase)).ToList();
        }
    }
}

    @if(filteredMovies.Count == 0)
    {
        <DisplayMovies Movies="@Movies"></DisplayMovies>
    }
    else
    {
        <DisplayMovies Movies="@filteredMovies"></DisplayMovies>
    }
}
@code {
    private bool IsLoggedIn = false;
    private static AuthenticationState NotAuthenticatedState = new AuthenticationState(new System.Security.Claims.ClaimsPrincipal());

    private async Task CheckIfAuthenticated()
    {
        var authState = await AuthenticationServiced.GetAuthenticationStateAsync();
        if(authState == NotAuthenticatedState)
        {
            IsLoggedIn = false;
        }
        else
        {
            IsLoggedIn = true;
        }
    }
}

